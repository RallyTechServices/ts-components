<!DOCTYPE html>
<html>
<head>
    <title>Harness: TS Multi-Select Field-Value Picker</title>
    <!--  (c) 2017 CA Technologies.  All Rights Reserved. -->
    <!--  Build Date: Mon Jul 17 2017 15:48:02 GMT-0700 (PDT) -->
    
    <script type="text/javascript">
        var APP_BUILD_DATE = "Mon Jul 17 2017 15:48:02 GMT-0700 (PDT)";
        var STORY    = "N/A";
        var BUILDER  = "marjo60";
        var CHECKSUM = 18392622851;
    </script>
    
    <script type="text/javascript" src="/apps/2.1/sdk.js"></script>
    <!-- our highcharts (needed so that we can add patterns) 
    <script type="text/javascript" src="/apps/2.1/lib/analytics/analytics-all.js"></script>
    -->
    
    
    <script type="text/javascript">
        Rally.onReady(function() {
            Ext.define("Rally.technicalservices.InfoLink",{extend:"Rally.ui.dialog.Dialog",alias:"widget.tsinfolink",informationHtml:null,title:"Build Information",defaults:{padding:5,margin:5},closable:!0,draggable:!0,autoShow:!0,width:350,informationalConfig:null,items:[{xtype:"container",itemId:"information"}],initComponent:function(){Ext.id(this);this.title="<span class='icon-help'> </span>"+this.title,this.callParent(arguments)},_generateChecksum:function(a){var b,c=305419896;for(a=a.replace(/var CHECKSUM = .*;/,""),a=a.replace(/var BUILDER  = .*;/,""),a=a.replace(/\s/g,""),b=0;b<a.length;b++)c+=a.charCodeAt(b)*b;return c},_checkChecksum:function(a){var b=Ext.create("Deft.Deferred"),c=this;return Ext.Ajax.request({url:document.URL,params:{id:1},success:function(a){if(text=a.responseText,CHECKSUM){var d=c._generateChecksum(text);if(CHECKSUM!==d)return void b.resolve(!1)}b.resolve(!0)}}),b.promise},_addToContainer:function(a){var b=Ext.apply({xtype:"container",height:200,overflowY:!0},this.informationalConfig);a.add(b)},afterRender:function(){var a=Rally.getApp();if(!Ext.isEmpty(this.informationalConfig)){var b=this.down("#information");this._addToContainer(b)}a.isExternal()?this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"... Running externally"}):this._checkChecksum(a).then({scope:this,success:function(a){a||this.addDocked({xtype:"container",cls:"build-info",dock:"bottom",padding:2,html:'<span class="icon-warning"> </span>Checksums do not match'})},failure:function(a){console.log("oops:",a)}}),this.callParent(arguments)},beforeRender:function(){if(this.callParent(arguments),this.informationHtml&&this.addDocked({xtype:"component",componentCls:"intro-panel",padding:2,html:this.informationHtml,doc:"top"}),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"This app was created by the CA AC Technical Services Team."}),APP_BUILD_DATE){var a=Ext.String.format("Built on: {0} <br/>Built by: {1}",APP_BUILD_DATE,BUILDER);STORY&&(a=a+"<br/>Source story: "+STORY),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:a})}}}),Ext.define("Rally.technicalservices.Logger",{constructor:function(a){Ext.apply(this,a)},log:function(a){var b="[ "+Ext.util.Format.date(new Date,"Y-m-d H:i:s.u")+" ]",c=[];c=Ext.Array.push(c,[b]),c=Ext.Array.push(c,Ext.Array.slice(arguments,0)),window.console&&console.log.apply(console,c)}}),Ext.define("CA.techservices.picker.FieldValuePicker",{extend:"Ext.form.field.Picker",alias:"widget.tsmultifieldvaluepicker",inheritableStatics:{defaultRowTextCls:"rui-picker-option-text"},componentCls:"rui-multiobject-picker",config:{autoExpand:!1,alwaysExpanded:!1,loadingText:"Loading...",selectionKey:"StringValue",model:"UserStory",field:null,recordKey:"StringValue",storeConfig:{autoLoad:!0,fetch:["StringValue"],pageSize:200,remoteGroup:!1,remoteSort:!1,remoteFilter:!1,limit:1/0,sorters:[{property:"Name",direction:"ASC"}]},storeLoadOptions:void 0,pickerType:"Ext.container.Container",pickerCfg:{floating:!0,hidden:!0,focusOnToFront:!1,shadow:!1,layout:{type:"vbox",align:"stretch",shrinkToFit:!0},cls:"multiobject-picker"},listType:"Ext.view.BoundList",listCfg:{selModel:{mode:"SIMPLE"},displayField:"Name",pageSize:0,autoScroll:!0,cls:"rui-multi-object-list"},rowSelectable:!1,rowCheckboxCls:"rui-picker-checkbox",msgTarget:"side",rowCls:"rui-multi-object-picker",disabledRowCls:"rui-multi-object-picker-disabled",maintainScrollPosition:!1,alwaysSelectedValues:[],noEntryText:"-- No Entry --",emptyText:"Begin typing...",notFoundText:'<div class="rui-multi-object-picker-empty-text">No matching item</div>',matchFieldName:"StringValue",filterFieldName:"Name",enableGrouping:!0,remoteFilter:!1,showCloseButton:!1,showSearchIcon:!1},constructor:function(a){this.mergeConfig(a),this.plugins=this.plugins||[],this.remoteFilter?this.plugins.push({ptype:"rallyremotefiltering"}):this.plugins.push({ptype:"rallyclientfiltering"}),this.enableGrouping&&this.plugins.push(this._getSelectedGroupableConfig()),this.selectedValues=Ext.create("Ext.util.MixedCollection"),this.alwaysExpanded&&!Ext.isDefined(this.config.hideTrigger)&&(this.hideTrigger=!0),this.callParent([this.config])},initComponent:function(){this.addEvents("afteralignpicker","select","deselect","selectionchange","datachanged"),this.callParent(arguments)},initEvents:function(){this.callParent(arguments),this.on("afterrender",this._onAfterRender,this,{single:!0}),this.on("afteralignpicker",this._selectCheckboxes,this),this.on("expand",this._onInitialExpand,this,{single:!0}),this._initInputEvents(),this._autoExpand()},setValue:function(a){var b=Ext.isString(a)?a.split(","):Ext.Array.from(a);b=Ext.Array.merge(b,this.alwaysSelectedValues),!Ext.isEmpty(b)&&this.store&&this.store.isLoading()?this.store.on("load",function(){this._selectValues(b)},this,{single:!0}):this._selectValues(b)},_selectValues:function(a){var b=this.selectedValues.getRange();this.selectedValues.clear(),_.each(a,function(a){var b=a&&a.isModel?a.get(this.selectionKey):a,c=this.findInStore(b);c?this.selectedValues.add(this._getKey(c),c):a.isModel&&this.selectedValues.add(b,a)},this),this.isExpanded&&(this._onListRefresh(),this._groupSelectedRecords()),this.fireEvent("change",this,this.selectedValues.getRange(),b)},getValue:function(){return this._getRecordValue()},getSubmitData:function(){var a={};return a[this.name]=this.getSubmitValue(),a},getSubmitValue:function(){var a=[];return this.selectedValues.eachKey(function(b,c){c.get(this.selectionKey)&&a.push(c.get(this.selectionKey))},this),a},createPicker:function(){return this.picker=Ext.create(this.pickerType,this.pickerCfg),this.picker.add(this._createList()),this.alwaysExpanded&&this.picker.on("beforehide",this._onBeforeHide),this.picker},_onBeforeHide:function(){return!1},setAlwaysExpanded:function(a){a?(this.alwaysExpanded=!0,this.picker.on("beforehide",this._onBeforeHide)):(this.alwaysExpanded=!1,this.picker.removeListener("beforehide",this._onBeforeHide))},alignPicker:function(){var a=this.getPosition()[1]-Ext.getBody().getScroll().top,b=Ext.Element.getViewHeight()-a-this.getHeight(),c=Math.max(a,b)-5;this._alignPickerAndList(),this.pickerCfg.height?(this.picker.setHeight(this.pickerCfg.height),this.list.setHeight(this.pickerCfg.height)):this._getListHeight()>c?(this.list.setHeight(c),this.picker.setHeight(c)):this._getListHeight()<c&&(this.list.setHeight(null),this.picker.setHeight(null)),Ext.isIE&&!this.hasDeferedAlign&&(this.hasDeferedAlign=!0,Ext.defer(function(){this.picker.isVisible()&&this.alignPicker(),delete this.hasDeferedAlign},1,this)),this.fireEvent("afteralignpicker")},_getListHeight:function(){return this.list.listEl.child("ul").getHeight()},doAlign:function(){var a=this.picker.el.getStyle("visibility");this.callParent(arguments),this.picker.el.setStyle({visibility:a})},_alignPickerAndList:function(){if(this.isExpanded){if(this.matchFieldWidth){var a=0;this.fieldLabel&&"top"!==this.labelAlign&&(a=this.labelWidth+5),this.list.setSize(this.getWidth()-a,null),this.picker.setSize(this.getWidth()-a,this._getPickerHeight())}this.picker.isFloating()&&this.doAlign()}},expand:function(){this.store?this.callParent(arguments):this._createStoreAndExpand()},collapseIf:function(){},collapse:function(){this.alwaysExpanded||this.callParent(arguments)},validateBlur:function(a){var b=Ext.get(a.target);return this.isDestroyed?!1:!(b.hasCls(this.rowCls)||b.hasCls(this.self.defaultRowTextCls)||b.hasCls(this.rowCheckboxCls))},refresh:function(){return this._refreshStore().then({success:this.refreshView,scope:this})},refreshView:function(){this._initFiltering(),this._groupRecords(this._getRecordValue()),this.originalValue&&this.setValue(this.originalValue),this.list&&this.list.refresh()},isRecordAlwaysSelected:function(a){return _.contains(this.alwaysSelectedValues,a.get(this.selectionKey))},_initFiltering:function(){this._setMatchedFieldValues()},_setMatchedFieldValues:function(){this.store.each(function(a){a.set(this.matchFieldName,a.get(this.filterFieldName))},this)},select:function(a){var b=this._getKey(a);this.selectedValues.add(b,a),this._syncSelection()},syncSelectionText:function(){var a=_.map(this.selectedValues.getRange(),function(a){return a.get(this.filterFieldName)},this).join(", ");Ext.isEmpty(a)?this.focusPlaceholderText():this.setValueText(a)},resetFilters:function(a){this.store.clearFilter(a),this.store.filter(this.getBaseFilter())},getBaseFilter:Ext.emptyFn,onEditorEnter:function(){this.resetFilters(!0)},onRender:function(){if(this.callParent(arguments),this.hideTrigger||this.inputEl.addCls("rui-multi-object-picker-no-trigger"),this.showSearchIcon){var a=this.inputEl.insertHtml("afterEnd",'<div class="icon-search rally-search-button"></div>');Ext.get(a).on("click",function(){this.focus()},this)}},addRecord:function(a){var b=Ext.create("Deft.Deferred");return this.mon(this.list,"refresh",function(){b.resolve(a)},this,{single:!0}),this.store.loadData([a],!0),b.promise},_initInputEvents:function(){return this.rendered?(this.mon(this.inputEl,"keydown",this._onInputKeyDown,this),this.mon(this.inputEl,"keyup",this.validate,this),void this.mon(this.inputEl,"keyup",this._onInputKeyUp,this)):void this.on("afterrender",this._initInputEvents,this,{single:!0})},_onAfterRender:function(){this.getInputEl().addCls("rui-multi-object-input"),this.getEl().on("click",this.expand,this)},_onInputKeyUp:function(a){this._setAppropriateEmptyText(),(a.shiftKey||!Rally.util.Event.isModifierKey(a))&&this.fireEvent("inputtextchanged",this.getInputTextValue())},_onInputKeyDown:function(a,b){a.isSpecialKey()||a.ctrlKey||this.isExpanded||this.expand()},_setAppropriateEmptyText:function(){var a=this.getList(),b=this.listCfg;a&&b&&b.emptyText&&(Ext.isEmpty(this.getInputTextValue())?a.emptyText=b.emptyText:a.emptyText=this.notFoundText)},_autoExpand:function(){return this.rendered?void((this.alwaysExpanded||this.autoExpand)&&this.expand()):void this.on("afterrender",this._autoExpand,this,{single:!0})},_onInitialExpand:function(a){a.inputEl&&a.mon(a.inputEl,"click",function(){var b=a.getPicker();b&&b.zIndexManager.bringToFront(b)}),this.list.getEl().on("click",this.triggerBlur,this,{delegate:".rui-multi-object-picker-close-button"}),this.list.on("refresh",function(){var a=this.list.listEl.down(".rui-multi-object-picker-close-button");if(a){var b=this.list.listEl.dom.scrollHeight>this.list.listEl.dom.clientHeight;a.setStyle("padding-right",(b?Ext.getScrollbarSize().width:0)+"px")}},this)},createStore:function(){var a=this,b=Ext.create("Deft.Deferred");return Rally.data.ModelFactory.getModel({type:a.model,success:function(c){a.store=c.getField(a.field).getAllowedValueStore(Ext.merge({requester:this},a.storeConfig)),a.relayEvents(a.store,["datachanged"]),b.resolve()},failure:function(){b.reject("Problem getting model allowed value store")}}),b.promise},_createStoreAndExpand:function(){this.createStore().then({success:this.expand,scope:this})},_getRecordValue:function(){var a=[];return this.selectedValues.eachKey(function(b,c){var d=this.findInStore(c.get(this.selectionKey));d?a.push(d):a.push(c)},this),a},_createList:function(){var a=Ext.apply({store:this.store,tpl:this._getListTpl()},this.listCfg);return this.list=Ext.create(this.listType,a),this.mon(this.list,{refresh:this._onListRefresh,itemclick:this._onListItemClick,scope:this}),this.list},_onStoreLoaded:function(){if(this.allowNoEntry){var a=this.store.count()>0&&this.store.findRecord(this.listCfg.displayField,this.noEntryText);if(!a){var b=Ext.create(this.store.model);b.set(this.listCfg.displayField,this.noEntryText),b.set(this.selectionKey,null),b.set(this.recordKey,0),this.store.insert(0,b)}}this.resetFilters()},_selectCheckboxes:function(){this.list&&this.list.getSelectionModel()&&Ext.each(this.list.getSelectionModel().getSelection(),function(a){this._selectRowCheckbox(a.get(this.recordKey))},this)},_refreshStore:function(){var a;return this.store?(this.resetFilters(),this.store.clearGrouping(),this.store.requester=this,a=this.store.getCount()<1?this.store.load(this.storeLoadOptions):Deft.Promise.when(this.store.data)):a=this.createStore().then({success:function(){return this.store.load(this.storeLoadOptions)},scope:this}),a.then({success:this._onStoreLoaded,scope:this})},_getPickerHeight:function(){var a=0;return Ext.each(this.picker.items.getRange(),function(b){b.isVisible()&&(a+=b.getHeight())}),a},_syncSelection:function(){if(this.list){var a=this.list.getSelectionModel();a.deselectAll(!0);var b=Ext.Array.filter(this._getRecordValue(),this._isRecordInList,this);this._doWithMaintainedScrollPosition(function(){a.select(b,!1,!0)})}},_getOptionCheckbox:function(a){var b="li."+this.id+"."+this._getOptionClass(a)+" .rui-picker-checkbox";return Ext.get(Ext.DomQuery.selectNode(b))},_getOptionClass:function(a){return"rui-multi-object-picker-option-id-"+a.toString()},_selectRowCheckbox:function(a){var b=this._getOptionCheckbox(a);b&&b.addCls("rui-picker-cb-checked")},_deselectRowCheckbox:function(a){this._getOptionCheckbox(a)&&this._getOptionCheckbox(a).removeCls("rui-picker-cb-checked")},_isRecordInList:function(a){return this.list.getNode(a)?!0:!1},_getListTpl:function(){var a=this;return Ext.create("Ext.XTemplate",'<tpl if="this.showCloseButton">','<div class="rui-multi-object-picker-close-button icon-cancel"></div>',"</tpl>",'<tpl exec="this.headerRendered = false"></tpl>',"<ul>",'<tpl for=".">','<tpl if="(!this.headerRendered) || (this.groupSelected !== values.groupSelected)">','<tpl exec="this.groupSelected = values.groupSelected"></tpl>','<tpl exec="this.headerRendered = true"></tpl>','<div class="rally-group-header multi-object-picker-header">',"{groupSelected}","</div>","</tpl>",'<li class="'+Ext.baseCSSPrefix+"boundlist-item "+this.rowCls+" {[this._getDisableClass(values)]} "+this.id+" rui-multi-object-picker-option-id-{"+this.recordKey+'}">','<div class="'+this.rowCheckboxCls+'" ></div>','<div class="{[this._getRowTextCls(values)]}">',"{[this._getMatchedText(values)]} {[this._getRightListHtml(values)]}","</div>","</li>","</tpl>","</ul>",{showCloseButton:this.showCloseButton,_getDisableClass:function(b){return Ext.Array.contains(a.alwaysSelectedValues,b[a.selectionKey])||!a.editable?a.disabledRowCls:""},_getRightListHtml:function(b){return a.getRightListHtml(b)},_getMatchedText:function(b){return a.getMatchedTextHtml(b)},_getRowTextCls:function(b){return a.getRowTextCls(b)}})},onListItemSelect:function(a,b,c){this.select(a),this._selectRowCheckbox(a.get(this.recordKey)),this._groupRecordsAndScroll(this._getRecordValue()),this.fireEvent("select",this,a,this.getValue(),b),this._fireSelectionChange()},onListItemDeselect:function(a,b,c){var d=this._getKey(a);this.selectedValues.remove(this.selectedValues.get(d)),this._syncSelection(),this._deselectRowCheckbox(a.get(this.recordKey)),this._groupRecordsAndScroll(this._getRecordValue()),this.fireEvent("deselect",this,a,this.getValue(),b),this._fireSelectionChange()},getMatchedTextHtml:function(a){var b=a[this.matchFieldName];return Ext.isEmpty(b)&&(b=this.noEntryText),b},getRightListHtml:function(){return""},getRowTextCls:function(a){return this.self.defaultRowTextCls},_getKey:function(a){return a.get(this.selectionKey)||this.noEntryText},_fireSelectionChange:function(){this.fireEvent("selectionchange",this,this.getValue()),this.focus()},_onListItemClick:function(a,b,c,d,e){if(this.isRecordAlwaysSelected(b)||!this.editable)return!1;var f=this.list.getSelectionModel();return f.isSelected(b)?this.onListItemDeselect(b,e,c):this.onListItemSelect(b,e,c),!1},_onListRefresh:function(){this._syncSelection(),this.alignPicker()},_groupRecordsAndScroll:function(a){var b=0;this.maintainScrollPosition&&(b=this.list.listEl.getScroll()),this._groupRecords(a),this.maintainScrollPosition&&Ext.Object.each(b,function(a){this.list.listEl.scrollTo(a,b[a])},this)},_doWithMaintainedScrollPosition:function(a){var b=0;this.maintainScrollPosition&&(b=this.list.listEl.getScroll()),a.call(this),this.maintainScrollPosition&&Ext.Object.each(b,function(a){this.list.listEl.scrollTo(a,b[a])},this)},_getSelectedGroupableConfig:function(){var a={ptype:"rallypickerselectedgroupable"};return this.selectedTextLabel&&(a.selectedTextLabel=this.selectedTextLabel),this.availableTextLabel&&(a.availableTextLabel=this.availableTextLabel),a},getInputTextValue:function(){return this.getInputEl().dom.value},focusPlaceholderText:function(){if(this.emptyText){var a=[0,0];this.focus(a)}},setValueText:function(a){var b=this.getInputEl();b&&(b.dom.value=a)},getInputEl:function(){return this.inputEl},getList:function(){return this.list},containsExactMatch:function(){var a=this.store,b=this.filterFieldName,c=this.getInputTextValue();return a.findBy(function(a){return a.get(b)===c})>-1},onEnable:function(){this.callParent(arguments),this.alwaysExpanded&&this.getPicker().enable()},onDisable:function(){this.callParent(arguments),this.alwaysExpanded&&this.getPicker().disable()},findInStore:function(a){return this.store?this.store.findRecord(this.selectionKey,new RegExp("^"+a+"$")):null},_groupRecords:Ext.emptyFn,_groupSelectedRecords:Ext.emptyFn}),Ext.define("harness_ts_picker_field_value",{extend:"Rally.app.App",componentCls:"app",logger:new Rally.technicalservices.Logger,defaults:{margin:10},items:[{xtype:"container",itemId:"message_box",tpl:"Hello, <tpl>{_refObjectName}</tpl>"},{xtype:"container",itemId:"display_box"}],integrationHeaders:{name:"harness_ts_picker_field_value"},launch:function(){this.add({xtype:"tsmultifieldvaluepicker",model:"Defect",field:"State",margin:25,fieldLabel:"States to Consider Closed",labelWidth:150})},_loadWsapiRecords:function(a){var b=Ext.create("Deft.Deferred"),c=this,d={model:"Defect",fetch:["ObjectID"]};return this.logger.log("Starting load:",a.model),Ext.create("Rally.data.wsapi.Store",Ext.Object.merge(d,a)).load({callback:function(a,d,e){e?b.resolve(a):(c.logger.log("Failed: ",d),b.reject("Problem loading: "+d.error.errors.join(". ")))}}),b.promise},_loadAStoreWithAPromise:function(a,b){var c=Ext.create("Deft.Deferred"),d=this;return this.logger.log("Starting load:",a,b),Ext.create("Rally.data.wsapi.Store",{model:a,fetch:b}).load({callback:function(a,b,e){e?c.resolve(this):(d.logger.log("Failed: ",b),c.reject("Problem loading: "+b.error.errors.join(". ")))}}),c.promise},_displayGrid:function(a,b){this.down("#display_box").add({xtype:"rallygrid",store:a,columnCfgs:b})},getOptions:function(){return[{text:"About...",handler:this._launchInfo,scope:this}]},_launchInfo:function(){this.about_dialog&&this.about_dialog.destroy(),this.about_dialog=Ext.create("Rally.technicalservices.InfoLink",{})},isExternal:function(){return"undefined"==typeof this.getAppId()},getSettingsFields:function(){return[{xtype:"tsmultifieldvaluepicker",model:"Defect",field:"State",margin:25,fieldLabel:"States to Consider Closed",labelWidth:150}]}});
            
               Rally.launchApp('harness_ts_picker_field_value', {
                   name: 'Harness: TS Multi-Select Field-Value Picker'
               });
        });
    </script>
    
    <style type="text/css">

.app {
}
.tsinfolink {
    position:absolute;
    right:0px;
    width: 14px;
    height: 14px;
    border-radius: 7px;
    text-align: center;
    color: white;
    background: #C0C0C0;
    border-style: solid;
    border-width: 1px;
    margin-top: 25px;
    margin-right: 5px;
    cursor: pointer;
}
    </style>

</head>
<body></body>
</html>